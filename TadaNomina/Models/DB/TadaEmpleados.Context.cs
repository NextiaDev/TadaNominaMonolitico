//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TadaNomina.Models.DB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TadaEmpleadosEntities : DbContext
    {
        public TadaEmpleadosEntities()
            : base("name=TadaEmpleadosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cat_CentroCostos> Cat_CentroCostos { get; set; }
        public virtual DbSet<Cat_Departamentos> Cat_Departamentos { get; set; }
        public virtual DbSet<Cat_Puestos> Cat_Puestos { get; set; }
        public virtual DbSet<Cat_EntidadFederativa> Cat_EntidadFederativa { get; set; }
        public virtual DbSet<CodigoPostal> CodigoPostal { get; set; }
        public virtual DbSet<Cat_RegistroPatronal> Cat_RegistroPatronal { get; set; }
        public virtual DbSet<Prestaciones> Prestaciones { get; set; }
        public virtual DbSet<Cat_Clientes> Cat_Clientes { get; set; }
        public virtual DbSet<Cat_Bancos> Cat_Bancos { get; set; }
        public virtual DbSet<Cat_CamposModificaEmp> Cat_CamposModificaEmp { get; set; }
        public virtual DbSet<ModificacionSueldos> ModificacionSueldos { get; set; }
        public virtual DbSet<vClienteEmpresaEspecializada> vClienteEmpresaEspecializada { get; set; }
        public virtual DbSet<Sindicatos> Sindicatos { get; set; }
        public virtual DbSet<Cat_ConceptosNomina> Cat_ConceptosNomina { get; set; }
        public virtual DbSet<vEmpleadosPTU> vEmpleadosPTU { get; set; }
        public virtual DbSet<vIncidencias> vIncidencias { get; set; }
        public virtual DbSet<Cat_Sucursales> Cat_Sucursales { get; set; }
        public virtual DbSet<Empleados> Empleados { get; set; }
        public virtual DbSet<vEmpleados> vEmpleados { get; set; }
        public virtual DbSet<EmpleadoInformacionComplementaria> EmpleadoInformacionComplementaria { get; set; }
    
        public virtual ObjectResult<string> sp_ArchivosSUA(Nullable<int> idCliente, Nullable<System.DateTime> fechaInicial, Nullable<System.DateTime> fechaFinal, string tipoMovimiento)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var fechaInicialParameter = fechaInicial.HasValue ?
                new ObjectParameter("FechaInicial", fechaInicial) :
                new ObjectParameter("FechaInicial", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var tipoMovimientoParameter = tipoMovimiento != null ?
                new ObjectParameter("TipoMovimiento", tipoMovimiento) :
                new ObjectParameter("TipoMovimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_ArchivosSUA", idClienteParameter, fechaInicialParameter, fechaFinalParameter, tipoMovimientoParameter);
        }
    }
}
