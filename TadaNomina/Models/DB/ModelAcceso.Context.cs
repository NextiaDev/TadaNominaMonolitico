//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TadaNomina.Models.DB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TadaAccesoEntities : DbContext
    {
        public TadaAccesoEntities()
            : base("name=TadaAccesoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cat_Clientes> Cat_Clientes { get; set; }
        public virtual DbSet<UrlSistema> UrlSistema { get; set; }
        public virtual DbSet<SendMail> SendMail { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
    
        [DbFunction("TadaAccesoEntities", "Valida_Accesos")]
        public virtual IQueryable<Nullable<int>> Valida_Accesos(string login, string password)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<int>>("[TadaAccesoEntities].[Valida_Accesos](@Login, @Password)", loginParameter, passwordParameter);
        }
    
        public virtual int sp_CambioPass(Nullable<int> idUsuario, string password, string passwordNuevo, ObjectParameter resultado)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var passwordNuevoParameter = passwordNuevo != null ?
                new ObjectParameter("PasswordNuevo", passwordNuevo) :
                new ObjectParameter("PasswordNuevo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CambioPass", idUsuarioParameter, passwordParameter, passwordNuevoParameter, resultado);
        }
    
        public virtual int sp_CambioPass1(Nullable<int> idUsuario, string password, string passwordNuevo, ObjectParameter resultado)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var passwordNuevoParameter = passwordNuevo != null ?
                new ObjectParameter("PasswordNuevo", passwordNuevo) :
                new ObjectParameter("PasswordNuevo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CambioPass1", idUsuarioParameter, passwordParameter, passwordNuevoParameter, resultado);
        }
    }
}
