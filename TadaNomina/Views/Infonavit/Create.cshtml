@model TadaNomina.Models.ViewModels.Nominas.ModelInfonavit

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_layoutPrincipal.cshtml";
}

<div id="page-head">
    <div id="page-title">
        <h1 class="page-header text-overflow">Créditos Vivienda</h1>
    </div>
    <div id="rutaPrincipal"></div>
</div>

<div class="col-md-8 col-md-offset-2">
    <div id="page-content">
        <div class="panel">
            <div class="panel-heading">
                <h3 class="panel-title">Caputar Datos.</h3>
            </div>
            <div class="panel-body">
                <hr />
                <div class="row">
                    <div class="form-group">
                        <div class="form-horizontal">
                            @Html.LabelFor(model => model.ClaveEmp, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.ClaveEmp, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ClaveEmp, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-1">
                                <button id="btnBuscar" class="btn btn-dark"><span class="fa fa-search"></span> Buscar</button>
                            </div>                            
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="form-group">
                        <div class="form-horizontal">
                            @Html.LabelFor(model => model.Empleado, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Empleado, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Empleado, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.rfc, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.rfc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Empleado, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.HiddenFor(x=> x.IdEmpleado)
                        <div class="row">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.Tipo, Model.lTipo, "Elegir...", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.CantidadUnidad, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.CantidadUnidad, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CantidadUnidad, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="form-group">
                                @Html.LabelFor(model => model.NoCredito, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.EditorFor(model => model.NoCredito, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NoCredito, "", new { @class = "text-danger" })
                                </div>

                                @Html.LabelFor(model => model.BanderaSeguroVivienda, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.CheckBoxFor(model => model.BanderaSeguroVivienda, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BanderaSeguroVivienda, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.CheckBoxFor(model => model.Activo, new { htmlAttributes = new { @class = "form-control"} })
                                    @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />

                        <div class="form-group">
                            <div class="col-md-12">
                                @if (Model.Mensaje != null)
                                {
                                    if (Model.Validacion)
                                    {
                                        <div class="alert alert-info">
                                            @Model.Mensaje
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="alert alert-danger">
                                            @Model.Mensaje
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                       
                        <div class="form-group">
                            <div class="text-right">
                                <input type="submit" value="Guardar" class="btn btn-primary btn-sm" />
                                @Html.ActionLink("Regresar", "Index", null, new { @class="btn btn-info btn-sm"})
                            </div>
                        </div>
                    </div>
                }

                <div>
                    
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/js/Core/mensajes.js"></script>
    <script src="~/js/Core/busquedaEmp.js"></script>
}
