@using TadaNomina.Models.ViewModels
@model Empleado
@{
    ViewBag.Title = "Revision";
    Layout = "~/Views/Shared/_layoutPrincipal.cshtml";
}


@section Styles
{
    <link href="~/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />
    <link href="~/plugins/bootstrap-datepicker/bootstrap-datepicker.min.css" rel="stylesheet">
}

<div id="page-head">
    <div id="page-title">
        <h1 class="page-header text-overflow">Honorarios Empleado</h1>
    </div>
    <div id="rutaPrincipal"></div>
</div>

<div id="page-content">
    <div class="row">
        <div class="panel">
            @using (Html.BeginForm("HonorariosEmp", "Honorarios", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()

                <div class="panel-body">

                    @Html.HiddenFor(model => model.IdEmpleado)
                    @Html.HiddenFor(model => model.IdUnidadNegocio)
                    @Html.HiddenFor(model => model.idHono)


                    <hr />

                    <div class="panel-heading">
                        <h3 class="panel-title"><i class="fa fa-address-card-o"></i> Informaci&oacute;n del Empleado</h3>
                    </div>

                    <!--Informacion general empleado-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.ClaveEmpleado, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.ClaveEmpleado, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.ClaveEmpleado, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.ApellidoPaterno, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.ApellidoPaterno, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.ApellidoPaterno, "", new { @class = "text-danger" })
                        </div>


                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.Nombre, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.ApellidoMaterno, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.ApellidoMaterno, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.ApellidoMaterno, "", new { @class = "text-danger" })
                        </div>
                    </div>







                    <hr />


                    <div class="panel-heading">
                        <h3 class="panel-title"><i class="fa fa-dollar"></i> Informaci&oacute;n Honorarios</h3>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConceptoPago, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.ConceptoPago, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.ConceptoPago, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.Patrona, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.Patrona, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Patrona, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Periodo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.Periodo, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Periodo, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <hr />


                    <div class="panel-heading">
                        <h3 class="panel-title"><i class="fa fa-dollar"></i> Datos XML</h3>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Rfc_Emisor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.Rfc_Emisor, htmlAttributes: new { @class = "form-control", id = "Emisor", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Rfc_Emisor, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Rfc_Receptor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.Rfc_Receptor, htmlAttributes: new { @class = "form-control", id = "Receptor", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.Rfc_Receptor, "", new { @class = "text-danger" })
                        </div>
                    </div><div class="form-group">
                        @Html.LabelFor(model => model.TotalXML, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.TotalXML, htmlAttributes: new { @class = "form-control", id = "TotalXML", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.TotalXML, "", new { @class = "text-danger" })
                        </div>
                    </div><div class="form-group">
                        @Html.LabelFor(model => model.UUID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.UUID, htmlAttributes: new { @class = "form-control", id = "UUID", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.UUID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br />
                    <br />
                    <br />
                    <center>
                        <a href="#" class="btn btn-success" id="proceso">Validar</a>


                    </center>




                    <div class="panel-heading">
                        <h3 class="panel-title"><i class="fa fa-user"></i> Validacion</h3>
                    </div>
                    <hr />

                    <div class="modal-body">

                        @{Html.RenderAction("ValidacionesLista", "Honorarios", new { id = Model.idHono });}


                    </div>




                </div>




            }


        </div>
    </div>




</div>






<script>

    $("#proceso").click(function () {
        debugger;
        var Emisor = $("#Emisor").val();
        var Receptor = $("#Receptor").val();
        var TotalXML = $("#TotalXML").val();
        var UUID = $("#UUID").val();
        var id = $("#idHono").val();

        console.log(id)

        console.log(Emisor, Receptor, TotalXML, UUID);
        $.ajax({
            type: 'POST',
            url: '../ValidarXMLCargar',
            dataType: 'json',
            data: { Emisor: Emisor, Receptor: Receptor, TotalXML: TotalXML, UUID: UUID },
            async: false,
            success: function (data) {
                $(location).attr('href', '../Revision?id=' + id);

                console.log(data);

            },
            error(er) {

            }
        });
    });


    function redirigir() {
        window.location.reload();
    }
</script>
@section Scripts {
    <script src="~/plugins/jquery-ui/jquery-ui.js"></script>
    <script src="~/plugins/bootstrap-datepicker/bootstrap-datepicker.min.js"></script>
    <script src="~/js/jquery.validate.js"></script>
    <script src="~/js/jquery.validate.unobtrusive.js"></script>
}
