@model TadaNomina.Models.ViewModels.Catalogos.ModelConceptos

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_layoutPrincipal.cshtml";
}

<div id="page-head">
    <div id="page-title">
        <h1 class="page-header text-overflow">Editar Conceptos</h1>
    </div>
    <div id="rutaPrincipal"></div>
</div>


<div id="page-content">
    <div class="panel">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.IdConcepto)
            <div class="panel">
                <div class="panel-heading">
                    <h3 class="panel-title">Información General</h3>
                </div>
                <div class="panel-body">
                    <i>* Campos obligatorios</i>
                    <br />
                    <div class="form-horizontal">
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(model => model.TipoConcepto, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.TipoConcepto, Model.LTipoConcepto, "Elegir...", htmlAttributes: new { @class = "form-control", @id = "_TipoConcepto" })
                                @Html.ValidationMessageFor(model => model.TipoConcepto, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.ClaveSAT, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.ClaveSAT, Model.lClaveSat, "Elegir...", htmlAttributes: new { @class = "form-control", @id = "IdCatSat" })
                                @Html.ValidationMessageFor(model => model.ClaveSAT, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ClaveGpo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.ClaveGpo, Model.LAgrupador, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClaveGpo, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.ClaveConcepto, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.ClaveConcepto, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.ClaveConcepto, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Concepto, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Concepto, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Concepto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Informacion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Informacion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Informacion, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <br />
                    </div>
                </div>
            </div>

            <div class="panel">
                <div class="panel-heading">
                    <h3 class="panel-title">Configuración Calculo.</h3>
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <hr />
                        <div class="form-group">
                            @*@Html.LabelFor(model => model.TipoConcepto, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.TipoConcepto, Model.LTipoConcepto, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TipoConcepto, "", new { @class = "text-danger" })
                            </div>*@
                            @Html.LabelFor(model => model.TipoDato, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.TipoDato, Model.LTipoDato, "Elegir...", htmlAttributes: new { @class = "form-control", @onchange = "ValidaDiasHoras(this.value)", @Id = "IdTipoDato" })
                                @Html.ValidationMessageFor(model => model.TipoDato, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.DiasHoras, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.DiasHoras, Model.lDiasHoras, "Elegir...", htmlAttributes: new { @class = "form-control", @id = "IdDiasHoras", @disabled = "true" })
                                @Html.ValidationMessageFor(model => model.DiasHoras, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TipoEsquema, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.TipoEsquema, Model.LTipoEsquema, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TipoEsquema, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.CalculaMontos, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.CalculaMontos, Model.LCalculaMontos, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CalculaMontos, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.SDPor, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.SDPor, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SDPor, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">

                            @Html.LabelFor(model => model.SDEntre, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.SDEntre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SDEntre, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.AfectaSueldo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.AfectaSueldo, Model.LAfectaSueldo, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AfectaSueldo, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.AfectaCargaSocial, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.AfectaCargaSocial, Model.LAfectaCargaSocial, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AfectaCargaSocial, "", new { @class = "text-danger" })
                            </div>
                            <br />

                        </div>

                        <div class="form-group">

                            @Html.LabelFor(model => model.sumaNetoFinal, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.sumaNetoFinal, Model.lSumaNeto, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.sumaNetoFinal, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.MultiplicacDiasTrabajados, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.MultiplicacDiasTrabajados, Model.lMultiplicaDiasTrabajados, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MultiplicacDiasTrabajados, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.TablaFactores, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.TablaFactores, Model.lstTablaFactores, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TablaFactores, "", new { @class = "text-danger" })
                            </div>


                            @Html.LabelFor(model => model.FactoryValor, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.FactoryValor, Model.lFactoryValor, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FactoryValor, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <a href="@Url.Action("TablaFactores", new { Model.IdConcepto, NombreConcepto = Model.ClaveConcepto + " - " + Model.Concepto })" class="btn btn-dark btn-sm btn-block"><span class="fa fa-cogs"></span> Configurar Tabla de Factores</a>
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.CalculoAutomatico, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.CalculoAutomatico, Model.lstPagoAutomatico, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CalculoAutomatico, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.Orden, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.Orden, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Orden, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Formula, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Formula, new { @class = "form-control", @rows = 5 })

                            </div>
                            <div class="col-md-1">
                                <span class="fa fa-info-circle fa-2x" id="infoEquivalencias"></span>
                            </div>
                        </div>
                        <br />
                    </div>
                </div>
            </div>

            <div class="panel">
                <div class="panel-heading">
                    <h3 class="panel-title">Configuración Exentos y Gravados.</h3>
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(model => model.Integrable, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.Integrable, Model.LIntegra, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Integrable, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.IntegraSDI, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.IntegraSDI, Model.LIntegraSDI, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IntegraSDI, "", new { @class = "text-danger" })
                            </div>

                            @Html.LabelFor(model => model.IntegraISN, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.IntegraISN, Model.LIntegraISN, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IntegraISN, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Exenta, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.Exenta, Model.LExenta, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Exenta, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.UnidadExenta, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.UnidadExenta, Model.LUExenta, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.UnidadExenta, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.CantidadExenta, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.CantidadExenta, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CantidadExenta, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PorcentajeGravado, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.PorcentajeGravado, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PorcentajeGravado, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.ExcentaPorUnidad, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.ExcentaPorUnidad, Model.lExcentaPorUnidad, "Elegir...", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ExcentaPorUnidad, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.smgvalcien, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.smgvalcien, Model.lsmgvalcien, "Elegir...", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.smgvalcien, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                    </div>

                </div>

            </div>

            <div class="panel">
                <div class="panel-heading">
                    <h3 class="panel-title">Configuración Especial.</h3>
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <hr />
                        <div class="form-group">
                            <div id="Pension">
                                @Html.LabelFor(model => model.IntegraPension, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    @Html.DropDownListFor(model => model.IntegraPension, Model.lstPension, "Elegir...", htmlAttributes: new { @class = "form-control", id = "IdPension" })
                                    @Html.ValidationMessageFor(model => model.IntegraPension, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @Html.LabelFor(model => model.ConceptoAdicional, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.ConceptoAdicional, Model.lConceptoAdicional, "Elegir...", htmlAttributes: new { @class = "form-control", onchange = "myFunctiontress();", @id = "_Valorr" })
                                @Html.ValidationMessageFor(model => model.ConceptoAdicional, "", new { @class = "text-danger" })
                            </div>
                            <div id="Conceptosd" style="display: none">
                                @Html.LabelFor(model => model.ClaveConceptos, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-2">
                                    @Html.DropDownListFor(model => model.ClaveConceptos, Model.LClaveConcepto, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ClaveConceptos, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Piramida, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.Piramida, Model.lPiramidal, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Piramida, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.PagoEfectivo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.PagoEfectivo, Model.lPagoEfectivo, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PagoEfectivo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        
                    </div>
                </div>
            </div>

            <div class="panel">
                <div class="panel-heading">
                    <h3 class="panel-title">Configuración Reporte.</h3>
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <hr />
                        <div class="form-group">
                            @Html.LabelFor(model => model.VisibleEnReporte, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.VisibleEnReporte, Model.lstVisibleReporte, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.VisibleEnReporte, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.ExcentoGravadoEnReporte, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.ExcentoGravadoEnReporte, Model.lstDesgloceGravadoExento, "Elegir...", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ExcentoGravadoEnReporte, "", new { @class = "text-danger" })
                            </div>

                        </div>
                       


                    </div>
                </div>
            </div>

            <div class="panel">
                <div class="panel-footer">
                    <div class="form-group" style="text-align:right">
                        <button type="submit" class="btn btn-primary btn-sm"><span class="fa fa-save"></span> Guardar Cambios</button>
                        <a href="@Url.Action("Index")" class="btn btn-info btn-sm _Back"><span class="fa fa-arrow-left"></span> Regresar</a>
                        
                    </div>
                </div>
            </div>
        }

    </div>
</div>

<div class="modal fade" id="modalInfo" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Formular conceptos.</h4>
            </div>
            <div class="modal-body">
                <p><strong>Palabras Resrvadas:</strong></p>
                <div id="tablaEquiv"></div>
                <hr />
                <p><strong>Como se usa:</strong></p>
                <p>Se pude agregar una formula utilizando la palabra <strong>CALCULO</strong> seguida de 2 puntos (<strong>:</strong>) y posteriormente la formula, ejemplo... </p>
                <p><strong>CALCULO:DT*SD/0.25</strong></p>
                <p>Tambien se pude especificar si se requiere omitir a uno o varios empleados con la palabra <strong>EXCEPTO</strong> seguida de 2 puntos (<strong>:</strong>) y posteriormente las claves de los empleados a omitir separadas por coma(,), ejemplo... </p>
                <p><strong>EXCEPTO:001, 002, 003</strong></p>
                <p>Tambien se pude especificar si se requiere omitir a uno o varios empleados con la palabra <strong>SOLO</strong> seguida de 2 puntos (<strong>:</strong>) y posteriormente las claves de los empleados a los que se les calculara separadas por coma(,), ejemplo... </p>
                <p><strong>SOLO:001, 002, 003</strong></p>
                <p>Para poder hacer uso del <strong>CALCULO</strong> en combianción con <strong>EXCEPTO</strong> o <strong>SOLO</strong> se debe utilizar punto y coma (<strong>;</strong>)</p>
                <p>Asi quedaria para pagar a todos <strong>EXCEPTO</strong> a ciertos empleados</p>
                <p><strong>CALCULO:DT*SD/0.25;EXCEPTO:001, 002, 003</strong></p>
                <p>ó</p>
                <strong>CALCULO:DT*SD/0.25;</strong><br />
                <strong>EXCEPTO:001, 002, 003</strong>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        console.log($('#IdPension').val());
        myFunctiontress();
        var dias = $("#IdTipoDato").val();
        if (dias == "Cantidades") {
            $("#IdDiasHoras").prop("disabled", false);
        }
    })


    function myFunctiontress() {
        var x = document.getElementById("_Valorr").value;

        if (x == "SI") {
            $('#Conceptosd').css("display", "block");
        }
        else {
            $('#Conceptosd').css("display", "none");
        }
    }

    function ValidaDiasHoras(TipoDato) {
        if (TipoDato == "Cantidades") {
            $("#IdDiasHoras").prop("disabled", false);
        } else {
            $("#IdDiasHoras").prop("disabled", true);
            $("#IdDiasHoras").val(null);
        }
    }

    $("#_TipoConcepto").change(function () {
        var tipo = $(this).val();

        $.ajax({
            type: 'POST',
            url: '../CargaCatalogoSAT',
            data: { tipo },
            success: function (result) {

                $('#IdCatSat').empty();
                var newItemElegir = $('<option/>').text("Elegir...").val("0");
                $('#IdCatSat').append(newItemElegir);
                $.each(result.catalogo, function (index, value) {
                    var newItem = $('<option/>').text(value.Clave + ' - ' + value.Descripcion).val(value.Clave);
                    $('#IdCatSat').append(newItem);
                });
            },
            error(ex) {

            }
        });
    });

    $("#infoEquivalencias").click(function () {
        $.ajax({
            type: 'POST',
            url: '../getPalabrasReservadas',
            success: function (result) {
                var table = "<div class='text-right'>";
                table += "</div><br />";
                table += "<table class='table table-hover table-sm'>";
                table += "<tr style='background-color:#CCCCCC'><th>Clave</th><th>Descripcion</th></tr>";

                for (var i = 0; i < result.length; i++) {
                    var cve = result[i].ClaveEmpleado;
                    var cls = "";
                    if (result[i].Estatus == "ACTIVO") { cls = "success" } else { cls = "danger" }
                    table += "<tr>";
                    table += "<td>" + result[i].Clave + "</<td>";
                    table += "<td>" + result[i].Descripcion + "</td>";

                    table += "</tr>"
                }

                table += "</table>";

                $("#tablaEquiv").html(table);
            }
        });
        $("#modalInfo").modal('show');
    });
</script>
            