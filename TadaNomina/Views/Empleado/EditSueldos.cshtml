@using TadaNomina.Models.ViewModels
@model ModelModificacionSueldos
@{
    ViewBag.Title = "EditSueldos";
    Layout = "~/Views/Shared/_layoutPrincipal.cshtml";
}


@section Styles
{
    <script src="~/js/Core/mensajes.js"></script>
    <script src="~/js/nifty.js"></script>
    <link href="~/plugins/jquery-ui/jquery-ui.css" rel="stylesheet" />
    <link href="~/plugins/bootstrap-datepicker/bootstrap-datepicker.min.css" rel="stylesheet">
}

<div id="page-head">
    <div id="page-title">
        <h1 class="page-header text-overflow">Modificación Empleado</h1>
    </div>
    <div id="rutaPrincipal"></div>
</div>

<div id="page-content">
    <div class="row">
        <div class="panel">
            @using (Html.BeginForm("EditSueldos", "Empleado", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()

                <div class="panel-body">

                    @Html.HiddenFor(model => model.IdEmpleado)
                    @Html.HiddenFor(model => model.IdUnidadNegocio)
                    @Html.HiddenFor(model => model.FechaReconocimientoAntiguedad)


                    <hr />



                    <div class="panel-heading">
                        <h3 class="panel-title"><i class="fa fa-address-card-o"></i> Informaci&oacute;n del Empleado</h3>
                    </div>
                    <br />
                    <br />

                    <div class="panel-heading">
                        <h3 class="panel-title"><i class="fa fa-dollar"></i> Informaci&oacute;n Financiera Actual</h3>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SD, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.SD, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.SD, "", new { @class = "text-danger" })
                        </div>

                        @Html.LabelFor(model => model.SDIMSS, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.SDIMSS, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.SDIMSS, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SDI, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.SDI, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.SDI, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <hr />

                    <!--Información financiara-->
                    <div class="panel-heading">
                        <h3 class="panel-title"><i class="fa fa-dollar"></i> Informaci&oacute;n Financiera a Modificar</h3>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SDSueldos, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.SDSueldos, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SDSueldos, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.SDIMSSSueldos, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.SDIMSSSueldos, htmlAttributes: new { @class = "form-control", onchange = "myFunction(this.value)" })
                            @Html.ValidationMessageFor(model => model.SDIMSSSueldos, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SDISueldos, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.SDISueldos, htmlAttributes: new { @class = "form-control", @id = "SDINuevo", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.SDISueldos, "", new { @class = "text-danger" })
                        </div>
                        @Html.LabelFor(model => model.FechaMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.FechaMovimiento, htmlAttributes: new { @class = "calendar form-control" })
                            @Html.ValidationMessageFor(model => model.FechaMovimiento, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.Observaciones, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <hr />
                    <div class="panel-footer">
                        <div class="form-group" style="text-align:right">
                            <input type="submit" value="Modificar" class="btn btn-primary" />
                            @Html.ActionLink("Cancelar", "ActualizaSueldos", null, new { @class = "btn btn-info _Back" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>



@if (ViewBag.JavaScriptFunction != null)
{
    <script type="text/javascript">
        @Html.Raw(ViewBag.JavaScriptFunction)
    </script>
}
@section Scripts {



    <script src="~/js/Core/EditSueldos.js"></script>

    <script src="~/js/jquery.validate.js"></script>
    <script src="~/js/jquery.validate.unobtrusive.js"></script>
    <script src="~/plugins/jquery-ui/jquery-ui.js"></script>
    <script src="~/plugins/bootstrap-datepicker/bootstrap-datepicker.min.js"></script>
}
